/* underscore in name -> watch for changes */
export const paramsList = [
    'init',
    '_direction',
    'touchEventsTarget',
    'initialSlide',
    '_speed',
    'cssMode',
    'updateOnWindowResize',
    'resizeObserver',
    'nested',
    'focusableElements',
    '_width',
    '_height',
    'preventInteractionOnTransition',
    'userAgent',
    'url',
    '_edgeSwipeDetection',
    '_edgeSwipeThreshold',
    '_freeMode',
    '_autoHeight',
    'setWrapperSize',
    'virtualTranslate',
    '_effect',
    'breakpoints',
    '_spaceBetween',
    '_slidesPerView',
    '_grid',
    '_slidesPerGroup',
    '_slidesPerGroupSkip',
    '_centeredSlides',
    '_centeredSlidesBounds',
    '_slidesOffsetBefore',
    '_slidesOffsetAfter',
    'normalizeSlideIndex',
    '_centerInsufficientSlides',
    '_watchOverflow',
    'roundLengths',
    'touchRatio',
    'touchAngle',
    'simulateTouch',
    '_shortSwipes',
    '_longSwipes',
    'longSwipesRatio',
    'longSwipesMs',
    '_followFinger',
    'allowTouchMove',
    '_threshold',
    'touchMoveStopPropagation',
    'touchStartPreventDefault',
    'touchStartForcePreventDefault',
    'touchReleaseOnEdges',
    'uniqueNavElements',
    '_resistance',
    '_resistanceRatio',
    '_watchSlidesProgress',
    '_grabCursor',
    'preventClicks',
    'preventClicksPropagation',
    '_slideToClickedSlide',
    '_preloadImages',
    'updateOnImagesReady',
    '_loop',
    '_loopAdditionalSlides',
    '_loopedSlides',
    '_loopFillGroupWithBlank',
    'loopPreventsSlide',
    '_allowSlidePrev',
    '_allowSlideNext',
    '_swipeHandler',
    '_noSwiping',
    'noSwipingClass',
    'noSwipingSelector',
    'passiveListeners',
    'containerModifierClass',
    'slideClass',
    'slideBlankClass',
    'slideActiveClass',
    'slideDuplicateActiveClass',
    'slideVisibleClass',
    'slideDuplicateClass',
    'slideNextClass',
    'slideDuplicateNextClass',
    'slidePrevClass',
    'slideDuplicatePrevClass',
    'wrapperClass',
    'runCallbacksOnInit',
    'observer',
    'observeParents',
    'observeSlideChildren',
    // modules
    'a11y',
    'autoplay',
    '_controller',
    'coverflowEffect',
    'cubeEffect',
    'fadeEffect',
    'flipEffect',
    'creativeEffect',
    'cardsEffect',
    'hashNavigation',
    'history',
    'keyboard',
    'lazy',
    'mousewheel',
    '_navigation',
    '_pagination',
    'parallax',
    '_scrollbar',
    '_thumbs',
    'virtual',
    'zoom',
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFyYW1zLWxpc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvYW5ndWxhci9zcmMvdXRpbHMvcGFyYW1zLWxpc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNkNBQTZDO0FBQzdDLE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBRztJQUN4QixNQUFNO0lBQ04sWUFBWTtJQUNaLG1CQUFtQjtJQUNuQixjQUFjO0lBQ2QsUUFBUTtJQUNSLFNBQVM7SUFDVCxzQkFBc0I7SUFDdEIsZ0JBQWdCO0lBQ2hCLFFBQVE7SUFDUixtQkFBbUI7SUFDbkIsUUFBUTtJQUNSLFNBQVM7SUFDVCxnQ0FBZ0M7SUFDaEMsV0FBVztJQUNYLEtBQUs7SUFDTCxxQkFBcUI7SUFDckIscUJBQXFCO0lBQ3JCLFdBQVc7SUFDWCxhQUFhO0lBQ2IsZ0JBQWdCO0lBQ2hCLGtCQUFrQjtJQUNsQixTQUFTO0lBQ1QsYUFBYTtJQUNiLGVBQWU7SUFDZixnQkFBZ0I7SUFDaEIsT0FBTztJQUNQLGlCQUFpQjtJQUNqQixxQkFBcUI7SUFDckIsaUJBQWlCO0lBQ2pCLHVCQUF1QjtJQUN2QixxQkFBcUI7SUFDckIsb0JBQW9CO0lBQ3BCLHFCQUFxQjtJQUNyQiwyQkFBMkI7SUFDM0IsZ0JBQWdCO0lBQ2hCLGNBQWM7SUFDZCxZQUFZO0lBQ1osWUFBWTtJQUNaLGVBQWU7SUFDZixjQUFjO0lBQ2QsYUFBYTtJQUNiLGlCQUFpQjtJQUNqQixjQUFjO0lBQ2QsZUFBZTtJQUNmLGdCQUFnQjtJQUNoQixZQUFZO0lBQ1osMEJBQTBCO0lBQzFCLDBCQUEwQjtJQUMxQiwrQkFBK0I7SUFDL0IscUJBQXFCO0lBQ3JCLG1CQUFtQjtJQUNuQixhQUFhO0lBQ2Isa0JBQWtCO0lBQ2xCLHNCQUFzQjtJQUN0QixhQUFhO0lBQ2IsZUFBZTtJQUNmLDBCQUEwQjtJQUMxQixzQkFBc0I7SUFDdEIsZ0JBQWdCO0lBQ2hCLHFCQUFxQjtJQUNyQixPQUFPO0lBQ1AsdUJBQXVCO0lBQ3ZCLGVBQWU7SUFDZix5QkFBeUI7SUFDekIsbUJBQW1CO0lBQ25CLGlCQUFpQjtJQUNqQixpQkFBaUI7SUFDakIsZUFBZTtJQUNmLFlBQVk7SUFDWixnQkFBZ0I7SUFDaEIsbUJBQW1CO0lBQ25CLGtCQUFrQjtJQUNsQix3QkFBd0I7SUFDeEIsWUFBWTtJQUNaLGlCQUFpQjtJQUNqQixrQkFBa0I7SUFDbEIsMkJBQTJCO0lBQzNCLG1CQUFtQjtJQUNuQixxQkFBcUI7SUFDckIsZ0JBQWdCO0lBQ2hCLHlCQUF5QjtJQUN6QixnQkFBZ0I7SUFDaEIseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCxvQkFBb0I7SUFDcEIsVUFBVTtJQUNWLGdCQUFnQjtJQUNoQixzQkFBc0I7SUFFdEIsVUFBVTtJQUNWLE1BQU07SUFDTixVQUFVO0lBQ1YsYUFBYTtJQUNiLGlCQUFpQjtJQUNqQixZQUFZO0lBQ1osWUFBWTtJQUNaLFlBQVk7SUFDWixnQkFBZ0I7SUFDaEIsYUFBYTtJQUNiLGdCQUFnQjtJQUNoQixTQUFTO0lBQ1QsVUFBVTtJQUNWLE1BQU07SUFDTixZQUFZO0lBQ1osYUFBYTtJQUNiLGFBQWE7SUFDYixVQUFVO0lBQ1YsWUFBWTtJQUNaLFNBQVM7SUFDVCxTQUFTO0lBQ1QsTUFBTTtDQUNQLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiB1bmRlcnNjb3JlIGluIG5hbWUgLT4gd2F0Y2ggZm9yIGNoYW5nZXMgKi9cbmV4cG9ydCBjb25zdCBwYXJhbXNMaXN0ID0gW1xuICAnaW5pdCcsXG4gICdfZGlyZWN0aW9uJyxcbiAgJ3RvdWNoRXZlbnRzVGFyZ2V0JyxcbiAgJ2luaXRpYWxTbGlkZScsXG4gICdfc3BlZWQnLFxuICAnY3NzTW9kZScsXG4gICd1cGRhdGVPbldpbmRvd1Jlc2l6ZScsXG4gICdyZXNpemVPYnNlcnZlcicsXG4gICduZXN0ZWQnLFxuICAnZm9jdXNhYmxlRWxlbWVudHMnLFxuICAnX3dpZHRoJyxcbiAgJ19oZWlnaHQnLFxuICAncHJldmVudEludGVyYWN0aW9uT25UcmFuc2l0aW9uJyxcbiAgJ3VzZXJBZ2VudCcsXG4gICd1cmwnLFxuICAnX2VkZ2VTd2lwZURldGVjdGlvbicsXG4gICdfZWRnZVN3aXBlVGhyZXNob2xkJyxcbiAgJ19mcmVlTW9kZScsXG4gICdfYXV0b0hlaWdodCcsXG4gICdzZXRXcmFwcGVyU2l6ZScsXG4gICd2aXJ0dWFsVHJhbnNsYXRlJyxcbiAgJ19lZmZlY3QnLFxuICAnYnJlYWtwb2ludHMnLFxuICAnX3NwYWNlQmV0d2VlbicsXG4gICdfc2xpZGVzUGVyVmlldycsXG4gICdfZ3JpZCcsXG4gICdfc2xpZGVzUGVyR3JvdXAnLFxuICAnX3NsaWRlc1Blckdyb3VwU2tpcCcsXG4gICdfY2VudGVyZWRTbGlkZXMnLFxuICAnX2NlbnRlcmVkU2xpZGVzQm91bmRzJyxcbiAgJ19zbGlkZXNPZmZzZXRCZWZvcmUnLFxuICAnX3NsaWRlc09mZnNldEFmdGVyJyxcbiAgJ25vcm1hbGl6ZVNsaWRlSW5kZXgnLFxuICAnX2NlbnRlckluc3VmZmljaWVudFNsaWRlcycsXG4gICdfd2F0Y2hPdmVyZmxvdycsXG4gICdyb3VuZExlbmd0aHMnLFxuICAndG91Y2hSYXRpbycsXG4gICd0b3VjaEFuZ2xlJyxcbiAgJ3NpbXVsYXRlVG91Y2gnLFxuICAnX3Nob3J0U3dpcGVzJyxcbiAgJ19sb25nU3dpcGVzJyxcbiAgJ2xvbmdTd2lwZXNSYXRpbycsXG4gICdsb25nU3dpcGVzTXMnLFxuICAnX2ZvbGxvd0ZpbmdlcicsXG4gICdhbGxvd1RvdWNoTW92ZScsXG4gICdfdGhyZXNob2xkJyxcbiAgJ3RvdWNoTW92ZVN0b3BQcm9wYWdhdGlvbicsXG4gICd0b3VjaFN0YXJ0UHJldmVudERlZmF1bHQnLFxuICAndG91Y2hTdGFydEZvcmNlUHJldmVudERlZmF1bHQnLFxuICAndG91Y2hSZWxlYXNlT25FZGdlcycsXG4gICd1bmlxdWVOYXZFbGVtZW50cycsXG4gICdfcmVzaXN0YW5jZScsXG4gICdfcmVzaXN0YW5jZVJhdGlvJyxcbiAgJ193YXRjaFNsaWRlc1Byb2dyZXNzJyxcbiAgJ19ncmFiQ3Vyc29yJyxcbiAgJ3ByZXZlbnRDbGlja3MnLFxuICAncHJldmVudENsaWNrc1Byb3BhZ2F0aW9uJyxcbiAgJ19zbGlkZVRvQ2xpY2tlZFNsaWRlJyxcbiAgJ19wcmVsb2FkSW1hZ2VzJyxcbiAgJ3VwZGF0ZU9uSW1hZ2VzUmVhZHknLFxuICAnX2xvb3AnLFxuICAnX2xvb3BBZGRpdGlvbmFsU2xpZGVzJyxcbiAgJ19sb29wZWRTbGlkZXMnLFxuICAnX2xvb3BGaWxsR3JvdXBXaXRoQmxhbmsnLFxuICAnbG9vcFByZXZlbnRzU2xpZGUnLFxuICAnX2FsbG93U2xpZGVQcmV2JyxcbiAgJ19hbGxvd1NsaWRlTmV4dCcsXG4gICdfc3dpcGVIYW5kbGVyJyxcbiAgJ19ub1N3aXBpbmcnLFxuICAnbm9Td2lwaW5nQ2xhc3MnLFxuICAnbm9Td2lwaW5nU2VsZWN0b3InLFxuICAncGFzc2l2ZUxpc3RlbmVycycsXG4gICdjb250YWluZXJNb2RpZmllckNsYXNzJyxcbiAgJ3NsaWRlQ2xhc3MnLFxuICAnc2xpZGVCbGFua0NsYXNzJyxcbiAgJ3NsaWRlQWN0aXZlQ2xhc3MnLFxuICAnc2xpZGVEdXBsaWNhdGVBY3RpdmVDbGFzcycsXG4gICdzbGlkZVZpc2libGVDbGFzcycsXG4gICdzbGlkZUR1cGxpY2F0ZUNsYXNzJyxcbiAgJ3NsaWRlTmV4dENsYXNzJyxcbiAgJ3NsaWRlRHVwbGljYXRlTmV4dENsYXNzJyxcbiAgJ3NsaWRlUHJldkNsYXNzJyxcbiAgJ3NsaWRlRHVwbGljYXRlUHJldkNsYXNzJyxcbiAgJ3dyYXBwZXJDbGFzcycsXG4gICdydW5DYWxsYmFja3NPbkluaXQnLFxuICAnb2JzZXJ2ZXInLFxuICAnb2JzZXJ2ZVBhcmVudHMnLFxuICAnb2JzZXJ2ZVNsaWRlQ2hpbGRyZW4nLFxuXG4gIC8vIG1vZHVsZXNcbiAgJ2ExMXknLFxuICAnYXV0b3BsYXknLFxuICAnX2NvbnRyb2xsZXInLFxuICAnY292ZXJmbG93RWZmZWN0JyxcbiAgJ2N1YmVFZmZlY3QnLFxuICAnZmFkZUVmZmVjdCcsXG4gICdmbGlwRWZmZWN0JyxcbiAgJ2NyZWF0aXZlRWZmZWN0JyxcbiAgJ2NhcmRzRWZmZWN0JyxcbiAgJ2hhc2hOYXZpZ2F0aW9uJyxcbiAgJ2hpc3RvcnknLFxuICAna2V5Ym9hcmQnLFxuICAnbGF6eScsXG4gICdtb3VzZXdoZWVsJyxcbiAgJ19uYXZpZ2F0aW9uJyxcbiAgJ19wYWdpbmF0aW9uJyxcbiAgJ3BhcmFsbGF4JyxcbiAgJ19zY3JvbGxiYXInLFxuICAnX3RodW1icycsXG4gICd2aXJ0dWFsJyxcbiAgJ3pvb20nLFxuXTtcbiJdfQ==